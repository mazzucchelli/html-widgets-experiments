{"version":3,"sources":["../node_modules/shortid/lib/random/random-from-seed.js","../node_modules/shortid/lib/alphabet.js","../node_modules/shortid/lib/random/random-byte-browser.js","../node_modules/nanoid/format.browser.js","../node_modules/shortid/lib/generate.js","../node_modules/shortid/lib/build.js","../node_modules/shortid/lib/is-valid.js","../node_modules/shortid/lib/util/cluster-worker-id-browser.js","../node_modules/shortid/lib/index.js","../node_modules/shortid/index.js","../node_modules/observable-membrane/dist/observable-membrane.js","lib/configs.ts","lib/utils.ts","lib/helpers/ReactiveComponent.ts","lib/helpers/componentsManager.ts","../node_modules/events/events.js","../node_modules/tiny-typed-emitter/lib/index.js","lib/helpers/eventEmitter.ts","js/components/CounterComponent.ts","js/index.ts"],"names":["isArray","Array","ObjectDotPrototype","Object","prototype","getPrototypeOf","ObjectCreate","create","ObjectDefineProperty","defineProperty","isExtensible","getOwnPropertyDescriptor","getOwnPropertyNames","getOwnPropertySymbols","preventExtensions","hasOwnProperty","ArrayPush","push","ArrayConcat","concat","OtS","toString","obj","call","isUndefined","undefined","isFunction","proxyToValueMap","WeakMap","registerProxy","proxy","value","set","unwrap","replicaOrAny","get","BaseProxyHandler","membrane","originalTarget","descriptor","wrapValue","originalSet","originalGet","wrapGetter","wrapSetter","shadowTarget","key","originalDescriptor","wrappedDesc","wrapDescriptor","forEach","copyDescriptorIntoShadowTarget","tagPropertyKey","thisArg","argArray","newTarget","valueObserved","keys","apply","lockShadowTarget","desc","writable","configurable","enumerable","getterMap$1","setterMap$1","reverseGetterMap","reverseSetterMap","ReactiveProxyHandler","getProxy","wrappedGetter","handler","wrappedSetter","v","unwrapGetter","unwrapSetter","redGet","reverseGetter","redSet","reverseSetter","valueMutated","unwrapDescriptor","getterMap","setterMap","ReadOnlyHandler","getReadOnlyProxy","extract","objectOrArray","map","item","original","names","reduce","seed","formatter","header","plainOrProxy","object","hasBody","body","getGlobal","globalThis","self","window","global","init","ReferenceError","defaultValueIsObservable","proto","defaultValueObserved","defaultValueMutated","createShadowTarget","ObservableMembrane","options","readOnlyObjectGraph","reactiveObjectGraph","valueIsObservable","unwrappedValue","getReactiveHandler","getReadOnlyHandler","p","Proxy","ReflectOwnKeys","R","Reflect","ReflectApply","target","receiver","args","Function","ProcessEmitWarning","warning","console","warn","ownKeys","NumberIsNaN","Number","isNaN","EventEmitter","module","exports","once","_events","_eventsCount","_maxListeners","defaultMaxListeners","checkListener","listener","TypeError","_getMaxListeners","that","_addListener","type","prepend","m","events","existing","newListener","emit","unshift","length","warned","w","Error","String","name","emitter","count","onceWrapper","fired","removeListener","wrapFn","arguments","_onceWrap","state","wrapped","bind","_listeners","evlistener","unwrapListeners","arrayClone","listenerCount","arr","n","copy","i","spliceOne","list","index","pop","ret","Promise","resolve","reject","errorListener","err","resolver","slice","eventTargetAgnosticAddListener","addErrorHandlerIfEventEmitter","flags","on","addEventListener","wrapListener","arg","removeEventListener","RangeError","setMaxListeners","getMaxListeners","doError","error","er","message","context","len","listeners","addListener","prependListener","prependOnceListener","position","originalListener","shift","off","removeAllListeners","rawListeners","eventNames"],"mappings":"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","file":"js.e6b96adc.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\n// Found this seed-based random generator somewhere\n// Based on The Central Randomizer 1.3 (C) 1997 by Paul Houle (houle@msc.cornell.edu)\n\nvar seed = 1;\n\n/**\n * return a random number based on a seed\n * @param seed\n * @returns {number}\n */\nfunction getNextValue() {\n    seed = (seed * 9301 + 49297) % 233280;\n    return seed/(233280.0);\n}\n\nfunction setSeed(_seed_) {\n    seed = _seed_;\n}\n\nmodule.exports = {\n    nextValue: getNextValue,\n    seed: setSeed\n};\n","'use strict';\n\nvar randomFromSeed = require('./random/random-from-seed');\n\nvar ORIGINAL = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-';\nvar alphabet;\nvar previousSeed;\n\nvar shuffled;\n\nfunction reset() {\n    shuffled = false;\n}\n\nfunction setCharacters(_alphabet_) {\n    if (!_alphabet_) {\n        if (alphabet !== ORIGINAL) {\n            alphabet = ORIGINAL;\n            reset();\n        }\n        return;\n    }\n\n    if (_alphabet_ === alphabet) {\n        return;\n    }\n\n    if (_alphabet_.length !== ORIGINAL.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. You submitted ' + _alphabet_.length + ' characters: ' + _alphabet_);\n    }\n\n    var unique = _alphabet_.split('').filter(function(item, ind, arr){\n       return ind !== arr.lastIndexOf(item);\n    });\n\n    if (unique.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. These characters were not unique: ' + unique.join(', '));\n    }\n\n    alphabet = _alphabet_;\n    reset();\n}\n\nfunction characters(_alphabet_) {\n    setCharacters(_alphabet_);\n    return alphabet;\n}\n\nfunction setSeed(seed) {\n    randomFromSeed.seed(seed);\n    if (previousSeed !== seed) {\n        reset();\n        previousSeed = seed;\n    }\n}\n\nfunction shuffle() {\n    if (!alphabet) {\n        setCharacters(ORIGINAL);\n    }\n\n    var sourceArray = alphabet.split('');\n    var targetArray = [];\n    var r = randomFromSeed.nextValue();\n    var characterIndex;\n\n    while (sourceArray.length > 0) {\n        r = randomFromSeed.nextValue();\n        characterIndex = Math.floor(r * sourceArray.length);\n        targetArray.push(sourceArray.splice(characterIndex, 1)[0]);\n    }\n    return targetArray.join('');\n}\n\nfunction getShuffled() {\n    if (shuffled) {\n        return shuffled;\n    }\n    shuffled = shuffle();\n    return shuffled;\n}\n\n/**\n * lookup shuffled letter\n * @param index\n * @returns {string}\n */\nfunction lookup(index) {\n    var alphabetShuffled = getShuffled();\n    return alphabetShuffled[index];\n}\n\nfunction get () {\n  return alphabet || ORIGINAL;\n}\n\nmodule.exports = {\n    get: get,\n    characters: characters,\n    seed: setSeed,\n    lookup: lookup,\n    shuffled: getShuffled\n};\n","'use strict';\n\nvar crypto = typeof window === 'object' && (window.crypto || window.msCrypto); // IE 11 uses window.msCrypto\n\nvar randomByte;\n\nif (!crypto || !crypto.getRandomValues) {\n    randomByte = function(size) {\n        var bytes = [];\n        for (var i = 0; i < size; i++) {\n            bytes.push(Math.floor(Math.random() * 256));\n        }\n        return bytes;\n    };\n} else {\n    randomByte = function(size) {\n        return crypto.getRandomValues(new Uint8Array(size));\n    };\n}\n\nmodule.exports = randomByte;\n","// This file replaces `format.js` in bundlers like webpack or Rollup,\n// according to `browser` config in `package.json`.\n\nmodule.exports = function (random, alphabet, size) {\n  // We can’t use bytes bigger than the alphabet. To make bytes values closer\n  // to the alphabet, we apply bitmask on them. We look for the closest\n  // `2 ** x - 1` number, which will be bigger than alphabet size. If we have\n  // 30 symbols in the alphabet, we will take 31 (00011111).\n  // We do not use faster Math.clz32, because it is not available in browsers.\n  var mask = (2 << Math.log(alphabet.length - 1) / Math.LN2) - 1\n  // Bitmask is not a perfect solution (in our example it will pass 31 bytes,\n  // which is bigger than the alphabet). As a result, we will need more bytes,\n  // than ID size, because we will refuse bytes bigger than the alphabet.\n\n  // Every hardware random generator call is costly,\n  // because we need to wait for entropy collection. This is why often it will\n  // be faster to ask for few extra bytes in advance, to avoid additional calls.\n\n  // Here we calculate how many random bytes should we call in advance.\n  // It depends on ID length, mask / alphabet size and magic number 1.6\n  // (which was selected according benchmarks).\n\n  // -~f => Math.ceil(f) if n is float number\n  // -~i => i + 1 if n is integer number\n  var step = -~(1.6 * mask * size / alphabet.length)\n  var id = ''\n\n  while (true) {\n    var bytes = random(step)\n    // Compact alternative for `for (var i = 0; i < step; i++)`\n    var i = step\n    while (i--) {\n      // If random byte is bigger than alphabet even after bitmask,\n      // we refuse it by `|| ''`.\n      id += alphabet[bytes[i] & mask] || ''\n      // More compact than `id.length + 1 === size`\n      if (id.length === +size) return id\n    }\n  }\n}\n","'use strict';\n\nvar alphabet = require('./alphabet');\nvar random = require('./random/random-byte');\nvar format = require('nanoid/format');\n\nfunction generate(number) {\n    var loopCounter = 0;\n    var done;\n\n    var str = '';\n\n    while (!done) {\n        str = str + format(random, alphabet.get(), 1);\n        done = number < (Math.pow(16, loopCounter + 1 ) );\n        loopCounter++;\n    }\n    return str;\n}\n\nmodule.exports = generate;\n","'use strict';\n\nvar generate = require('./generate');\nvar alphabet = require('./alphabet');\n\n// Ignore all milliseconds before a certain time to reduce the size of the date entropy without sacrificing uniqueness.\n// This number should be updated every year or so to keep the generated id short.\n// To regenerate `new Date() - 0` and bump the version. Always bump the version!\nvar REDUCE_TIME = 1567752802062;\n\n// don't change unless we change the algos or REDUCE_TIME\n// must be an integer and less than 16\nvar version = 7;\n\n// Counter is used when shortid is called multiple times in one second.\nvar counter;\n\n// Remember the last time shortid was called in case counter is needed.\nvar previousSeconds;\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction build(clusterWorkerId) {\n    var str = '';\n\n    var seconds = Math.floor((Date.now() - REDUCE_TIME) * 0.001);\n\n    if (seconds === previousSeconds) {\n        counter++;\n    } else {\n        counter = 0;\n        previousSeconds = seconds;\n    }\n\n    str = str + generate(version);\n    str = str + generate(clusterWorkerId);\n    if (counter > 0) {\n        str = str + generate(counter);\n    }\n    str = str + generate(seconds);\n    return str;\n}\n\nmodule.exports = build;\n","'use strict';\nvar alphabet = require('./alphabet');\n\nfunction isShortId(id) {\n    if (!id || typeof id !== 'string' || id.length < 6 ) {\n        return false;\n    }\n\n    var nonAlphabetic = new RegExp('[^' +\n      alphabet.get().replace(/[|\\\\{}()[\\]^$+*?.-]/g, '\\\\$&') +\n    ']');\n    return !nonAlphabetic.test(id);\n}\n\nmodule.exports = isShortId;\n","'use strict';\n\nmodule.exports = 0;\n","'use strict';\n\nvar alphabet = require('./alphabet');\nvar build = require('./build');\nvar isValid = require('./is-valid');\n\n// if you are using cluster or multiple servers use this to make each instance\n// has a unique value for worker\n// Note: I don't know if this is automatically set when using third\n// party cluster solutions such as pm2.\nvar clusterWorkerId = require('./util/cluster-worker-id') || 0;\n\n/**\n * Set the seed.\n * Highly recommended if you don't want people to try to figure out your id schema.\n * exposed as shortid.seed(int)\n * @param seed Integer value to seed the random alphabet.  ALWAYS USE THE SAME SEED or you might get overlaps.\n */\nfunction seed(seedValue) {\n    alphabet.seed(seedValue);\n    return module.exports;\n}\n\n/**\n * Set the cluster worker or machine id\n * exposed as shortid.worker(int)\n * @param workerId worker must be positive integer.  Number less than 16 is recommended.\n * returns shortid module so it can be chained.\n */\nfunction worker(workerId) {\n    clusterWorkerId = workerId;\n    return module.exports;\n}\n\n/**\n *\n * sets new characters to use in the alphabet\n * returns the shuffled alphabet\n */\nfunction characters(newCharacters) {\n    if (newCharacters !== undefined) {\n        alphabet.characters(newCharacters);\n    }\n\n    return alphabet.shuffled();\n}\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction generate() {\n  return build(clusterWorkerId);\n}\n\n// Export all other functions as properties of the generate function\nmodule.exports = generate;\nmodule.exports.generate = generate;\nmodule.exports.seed = seed;\nmodule.exports.worker = worker;\nmodule.exports.characters = characters;\nmodule.exports.isValid = isValid;\n","'use strict';\nmodule.exports = require('./lib/index');\n","/**\n * Copyright (C) 2017 salesforce.com, inc.\n */\nconst { isArray } = Array;\nconst { prototype: ObjectDotPrototype, getPrototypeOf, create: ObjectCreate, defineProperty: ObjectDefineProperty, isExtensible, getOwnPropertyDescriptor, getOwnPropertyNames, getOwnPropertySymbols, preventExtensions, hasOwnProperty, } = Object;\nconst { push: ArrayPush, concat: ArrayConcat } = Array.prototype;\nconst OtS = {}.toString;\nfunction toString(obj) {\n    if (obj && obj.toString) {\n        return obj.toString();\n    }\n    else if (typeof obj === 'object') {\n        return OtS.call(obj);\n    }\n    else {\n        return obj + '';\n    }\n}\nfunction isUndefined(obj) {\n    return obj === undefined;\n}\nfunction isFunction(obj) {\n    return typeof obj === 'function';\n}\nconst proxyToValueMap = new WeakMap();\nfunction registerProxy(proxy, value) {\n    proxyToValueMap.set(proxy, value);\n}\nconst unwrap = (replicaOrAny) => proxyToValueMap.get(replicaOrAny) || replicaOrAny;\n\nclass BaseProxyHandler {\n    constructor(membrane, value) {\n        this.originalTarget = value;\n        this.membrane = membrane;\n    }\n    // Shared utility methods\n    wrapDescriptor(descriptor) {\n        if (hasOwnProperty.call(descriptor, 'value')) {\n            descriptor.value = this.wrapValue(descriptor.value);\n        }\n        else {\n            const { set: originalSet, get: originalGet } = descriptor;\n            if (!isUndefined(originalGet)) {\n                descriptor.get = this.wrapGetter(originalGet);\n            }\n            if (!isUndefined(originalSet)) {\n                descriptor.set = this.wrapSetter(originalSet);\n            }\n        }\n        return descriptor;\n    }\n    copyDescriptorIntoShadowTarget(shadowTarget, key) {\n        const { originalTarget } = this;\n        // Note: a property might get defined multiple times in the shadowTarget\n        //       but it will always be compatible with the previous descriptor\n        //       to preserve the object invariants, which makes these lines safe.\n        const originalDescriptor = getOwnPropertyDescriptor(originalTarget, key);\n        // TODO: it should be impossible for the originalDescriptor to ever be undefined, this `if` can be removed\n        /* istanbul ignore else */\n        if (!isUndefined(originalDescriptor)) {\n            const wrappedDesc = this.wrapDescriptor(originalDescriptor);\n            ObjectDefineProperty(shadowTarget, key, wrappedDesc);\n        }\n    }\n    lockShadowTarget(shadowTarget) {\n        const { originalTarget } = this;\n        const targetKeys = ArrayConcat.call(getOwnPropertyNames(originalTarget), getOwnPropertySymbols(originalTarget));\n        targetKeys.forEach((key) => {\n            this.copyDescriptorIntoShadowTarget(shadowTarget, key);\n        });\n        const { membrane: { tagPropertyKey }, } = this;\n        if (!isUndefined(tagPropertyKey) && !hasOwnProperty.call(shadowTarget, tagPropertyKey)) {\n            ObjectDefineProperty(shadowTarget, tagPropertyKey, ObjectCreate(null));\n        }\n        preventExtensions(shadowTarget);\n    }\n    // Shared Traps\n    // TODO: apply() is never called\n    /* istanbul ignore next */\n    apply(shadowTarget, thisArg, argArray) {\n        /* No op */\n    }\n    // TODO: construct() is never called\n    /* istanbul ignore next */\n    construct(shadowTarget, argArray, newTarget) {\n        /* No op */\n    }\n    get(shadowTarget, key) {\n        const { originalTarget, membrane: { valueObserved }, } = this;\n        const value = originalTarget[key];\n        valueObserved(originalTarget, key);\n        return this.wrapValue(value);\n    }\n    has(shadowTarget, key) {\n        const { originalTarget, membrane: { tagPropertyKey, valueObserved }, } = this;\n        valueObserved(originalTarget, key);\n        // since key is never going to be undefined, and tagPropertyKey might be undefined\n        // we can simply compare them as the second part of the condition.\n        return key in originalTarget || key === tagPropertyKey;\n    }\n    ownKeys(shadowTarget) {\n        const { originalTarget, membrane: { tagPropertyKey }, } = this;\n        // if the membrane tag key exists and it is not in the original target, we add it to the keys.\n        const keys = isUndefined(tagPropertyKey) || hasOwnProperty.call(originalTarget, tagPropertyKey)\n            ? []\n            : [tagPropertyKey];\n        // small perf optimization using push instead of concat to avoid creating an extra array\n        ArrayPush.apply(keys, getOwnPropertyNames(originalTarget));\n        ArrayPush.apply(keys, getOwnPropertySymbols(originalTarget));\n        return keys;\n    }\n    isExtensible(shadowTarget) {\n        const { originalTarget } = this;\n        // optimization to avoid attempting to lock down the shadowTarget multiple times\n        if (!isExtensible(shadowTarget)) {\n            return false; // was already locked down\n        }\n        if (!isExtensible(originalTarget)) {\n            this.lockShadowTarget(shadowTarget);\n            return false;\n        }\n        return true;\n    }\n    getPrototypeOf(shadowTarget) {\n        const { originalTarget } = this;\n        return getPrototypeOf(originalTarget);\n    }\n    getOwnPropertyDescriptor(shadowTarget, key) {\n        const { originalTarget, membrane: { valueObserved, tagPropertyKey }, } = this;\n        // keys looked up via getOwnPropertyDescriptor need to be reactive\n        valueObserved(originalTarget, key);\n        let desc = getOwnPropertyDescriptor(originalTarget, key);\n        if (isUndefined(desc)) {\n            if (key !== tagPropertyKey) {\n                return undefined;\n            }\n            // if the key is the membrane tag key, and is not in the original target,\n            // we produce a synthetic descriptor and install it on the shadow target\n            desc = { value: undefined, writable: false, configurable: false, enumerable: false };\n            ObjectDefineProperty(shadowTarget, tagPropertyKey, desc);\n            return desc;\n        }\n        if (desc.configurable === false) {\n            // updating the descriptor to non-configurable on the shadow\n            this.copyDescriptorIntoShadowTarget(shadowTarget, key);\n        }\n        // Note: by accessing the descriptor, the key is marked as observed\n        // but access to the value, setter or getter (if available) cannot observe\n        // mutations, just like regular methods, in which case we just do nothing.\n        return this.wrapDescriptor(desc);\n    }\n}\n\nconst getterMap$1 = new WeakMap();\nconst setterMap$1 = new WeakMap();\nconst reverseGetterMap = new WeakMap();\nconst reverseSetterMap = new WeakMap();\nclass ReactiveProxyHandler extends BaseProxyHandler {\n    wrapValue(value) {\n        return this.membrane.getProxy(value);\n    }\n    wrapGetter(originalGet) {\n        const wrappedGetter = getterMap$1.get(originalGet);\n        if (!isUndefined(wrappedGetter)) {\n            return wrappedGetter;\n        }\n        const handler = this;\n        const get = function () {\n            // invoking the original getter with the original target\n            return handler.wrapValue(originalGet.call(unwrap(this)));\n        };\n        getterMap$1.set(originalGet, get);\n        reverseGetterMap.set(get, originalGet);\n        return get;\n    }\n    wrapSetter(originalSet) {\n        const wrappedSetter = setterMap$1.get(originalSet);\n        if (!isUndefined(wrappedSetter)) {\n            return wrappedSetter;\n        }\n        const set = function (v) {\n            // invoking the original setter with the original target\n            originalSet.call(unwrap(this), unwrap(v));\n        };\n        setterMap$1.set(originalSet, set);\n        reverseSetterMap.set(set, originalSet);\n        return set;\n    }\n    unwrapDescriptor(descriptor) {\n        if (hasOwnProperty.call(descriptor, 'value')) {\n            // dealing with a data descriptor\n            descriptor.value = unwrap(descriptor.value);\n        }\n        else {\n            const { set, get } = descriptor;\n            if (!isUndefined(get)) {\n                descriptor.get = this.unwrapGetter(get);\n            }\n            if (!isUndefined(set)) {\n                descriptor.set = this.unwrapSetter(set);\n            }\n        }\n        return descriptor;\n    }\n    unwrapGetter(redGet) {\n        const reverseGetter = reverseGetterMap.get(redGet);\n        if (!isUndefined(reverseGetter)) {\n            return reverseGetter;\n        }\n        const handler = this;\n        const get = function () {\n            // invoking the red getter with the proxy of this\n            return unwrap(redGet.call(handler.wrapValue(this)));\n        };\n        getterMap$1.set(get, redGet);\n        reverseGetterMap.set(redGet, get);\n        return get;\n    }\n    unwrapSetter(redSet) {\n        const reverseSetter = reverseSetterMap.get(redSet);\n        if (!isUndefined(reverseSetter)) {\n            return reverseSetter;\n        }\n        const handler = this;\n        const set = function (v) {\n            // invoking the red setter with the proxy of this\n            redSet.call(handler.wrapValue(this), handler.wrapValue(v));\n        };\n        setterMap$1.set(set, redSet);\n        reverseSetterMap.set(redSet, set);\n        return set;\n    }\n    set(shadowTarget, key, value) {\n        const { originalTarget, membrane: { valueMutated }, } = this;\n        const oldValue = originalTarget[key];\n        if (oldValue !== value) {\n            originalTarget[key] = value;\n            valueMutated(originalTarget, key);\n        }\n        else if (key === 'length' && isArray(originalTarget)) {\n            // fix for issue #236: push will add the new index, and by the time length\n            // is updated, the internal length is already equal to the new length value\n            // therefore, the oldValue is equal to the value. This is the forking logic\n            // to support this use case.\n            valueMutated(originalTarget, key);\n        }\n        return true;\n    }\n    deleteProperty(shadowTarget, key) {\n        const { originalTarget, membrane: { valueMutated }, } = this;\n        delete originalTarget[key];\n        valueMutated(originalTarget, key);\n        return true;\n    }\n    setPrototypeOf(shadowTarget, prototype) {\n        /* istanbul ignore else */\n        if (process.env.NODE_ENV !== 'production') {\n            throw new Error(`Invalid setPrototypeOf invocation for reactive proxy ${toString(this.originalTarget)}. Prototype of reactive objects cannot be changed.`);\n        }\n    }\n    preventExtensions(shadowTarget) {\n        if (isExtensible(shadowTarget)) {\n            const { originalTarget } = this;\n            preventExtensions(originalTarget);\n            // if the originalTarget is a proxy itself, it might reject\n            // the preventExtension call, in which case we should not attempt to lock down\n            // the shadow target.\n            // TODO: It should not actually be possible to reach this `if` statement.\n            // If a proxy rejects extensions, then calling preventExtensions will throw an error:\n            // https://codepen.io/nolanlawson-the-selector/pen/QWMOjbY\n            /* istanbul ignore if */\n            if (isExtensible(originalTarget)) {\n                return false;\n            }\n            this.lockShadowTarget(shadowTarget);\n        }\n        return true;\n    }\n    defineProperty(shadowTarget, key, descriptor) {\n        const { originalTarget, membrane: { valueMutated, tagPropertyKey }, } = this;\n        if (key === tagPropertyKey && !hasOwnProperty.call(originalTarget, key)) {\n            // To avoid leaking the membrane tag property into the original target, we must\n            // be sure that the original target doesn't have yet.\n            // NOTE: we do not return false here because Object.freeze and equivalent operations\n            // will attempt to set the descriptor to the same value, and expect no to throw. This\n            // is an small compromise for the sake of not having to diff the descriptors.\n            return true;\n        }\n        ObjectDefineProperty(originalTarget, key, this.unwrapDescriptor(descriptor));\n        // intentionally testing if false since it could be undefined as well\n        if (descriptor.configurable === false) {\n            this.copyDescriptorIntoShadowTarget(shadowTarget, key);\n        }\n        valueMutated(originalTarget, key);\n        return true;\n    }\n}\n\nconst getterMap = new WeakMap();\nconst setterMap = new WeakMap();\nclass ReadOnlyHandler extends BaseProxyHandler {\n    wrapValue(value) {\n        return this.membrane.getReadOnlyProxy(value);\n    }\n    wrapGetter(originalGet) {\n        const wrappedGetter = getterMap.get(originalGet);\n        if (!isUndefined(wrappedGetter)) {\n            return wrappedGetter;\n        }\n        const handler = this;\n        const get = function () {\n            // invoking the original getter with the original target\n            return handler.wrapValue(originalGet.call(unwrap(this)));\n        };\n        getterMap.set(originalGet, get);\n        return get;\n    }\n    wrapSetter(originalSet) {\n        const wrappedSetter = setterMap.get(originalSet);\n        if (!isUndefined(wrappedSetter)) {\n            return wrappedSetter;\n        }\n        const handler = this;\n        const set = function (v) {\n            /* istanbul ignore else */\n            if (process.env.NODE_ENV !== 'production') {\n                const { originalTarget } = handler;\n                throw new Error(`Invalid mutation: Cannot invoke a setter on \"${originalTarget}\". \"${originalTarget}\" is read-only.`);\n            }\n        };\n        setterMap.set(originalSet, set);\n        return set;\n    }\n    set(shadowTarget, key, value) {\n        /* istanbul ignore else */\n        if (process.env.NODE_ENV !== 'production') {\n            const { originalTarget } = this;\n            const msg = isArray(originalTarget)\n                ? `Invalid mutation: Cannot mutate array at index ${key.toString()}. Array is read-only.`\n                : `Invalid mutation: Cannot set \"${key.toString()}\" on \"${originalTarget}\". \"${originalTarget}\" is read-only.`;\n            throw new Error(msg);\n        }\n        /* istanbul ignore next */\n        return false;\n    }\n    deleteProperty(shadowTarget, key) {\n        /* istanbul ignore else */\n        if (process.env.NODE_ENV !== 'production') {\n            const { originalTarget } = this;\n            throw new Error(`Invalid mutation: Cannot delete \"${key.toString()}\" on \"${originalTarget}\". \"${originalTarget}\" is read-only.`);\n        }\n        /* istanbul ignore next */\n        return false;\n    }\n    setPrototypeOf(shadowTarget, prototype) {\n        /* istanbul ignore else */\n        if (process.env.NODE_ENV !== 'production') {\n            const { originalTarget } = this;\n            throw new Error(`Invalid prototype mutation: Cannot set prototype on \"${originalTarget}\". \"${originalTarget}\" prototype is read-only.`);\n        }\n    }\n    preventExtensions(shadowTarget) {\n        /* istanbul ignore else */\n        if (process.env.NODE_ENV !== 'production') {\n            const { originalTarget } = this;\n            throw new Error(`Invalid mutation: Cannot preventExtensions on ${originalTarget}\". \"${originalTarget} is read-only.`);\n        }\n        /* istanbul ignore next */\n        return false;\n    }\n    defineProperty(shadowTarget, key, descriptor) {\n        /* istanbul ignore else */\n        if (process.env.NODE_ENV !== 'production') {\n            const { originalTarget } = this;\n            throw new Error(`Invalid mutation: Cannot defineProperty \"${key.toString()}\" on \"${originalTarget}\". \"${originalTarget}\" is read-only.`);\n        }\n        /* istanbul ignore next */\n        return false;\n    }\n}\n\nfunction extract(objectOrArray) {\n    if (isArray(objectOrArray)) {\n        return objectOrArray.map((item) => {\n            const original = unwrap(item);\n            if (original !== item) {\n                return extract(original);\n            }\n            return item;\n        });\n    }\n    const obj = ObjectCreate(getPrototypeOf(objectOrArray));\n    const names = getOwnPropertyNames(objectOrArray);\n    return ArrayConcat.call(names, getOwnPropertySymbols(objectOrArray)).reduce((seed, key) => {\n        const item = objectOrArray[key];\n        const original = unwrap(item);\n        if (original !== item) {\n            seed[key] = extract(original);\n        }\n        else {\n            seed[key] = item;\n        }\n        return seed;\n    }, obj);\n}\nconst formatter = {\n    header: (plainOrProxy) => {\n        const originalTarget = unwrap(plainOrProxy);\n        // if originalTarget is falsy or not unwrappable, exit\n        if (!originalTarget || originalTarget === plainOrProxy) {\n            return null;\n        }\n        const obj = extract(plainOrProxy);\n        return ['object', { object: obj }];\n    },\n    hasBody: () => {\n        return false;\n    },\n    body: () => {\n        return null;\n    },\n};\n// Inspired from paulmillr/es6-shim\n// https://github.com/paulmillr/es6-shim/blob/master/es6-shim.js#L176-L185\n/* istanbul ignore next */\nfunction getGlobal() {\n    // the only reliable means to get the global object is `Function('return this')()`\n    // However, this causes CSP violations in Chrome apps.\n    if (typeof globalThis !== 'undefined') {\n        return globalThis;\n    }\n    if (typeof self !== 'undefined') {\n        return self;\n    }\n    if (typeof window !== 'undefined') {\n        return window;\n    }\n    if (typeof global !== 'undefined') {\n        return global;\n    }\n    // Gracefully degrade if not able to locate the global object\n    return {};\n}\nfunction init() {\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV === 'production') {\n        // this method should never leak to prod\n        throw new ReferenceError();\n    }\n    const global = getGlobal();\n    // Custom Formatter for Dev Tools. To enable this, open Chrome Dev Tools\n    //  - Go to Settings,\n    //  - Under console, select \"Enable custom formatters\"\n    // For more information, https://docs.google.com/document/d/1FTascZXT9cxfetuPRT2eXPQKXui4nWFivUnS_335T3U/preview\n    const devtoolsFormatters = global.devtoolsFormatters || [];\n    ArrayPush.call(devtoolsFormatters, formatter);\n    global.devtoolsFormatters = devtoolsFormatters;\n}\n\n/* istanbul ignore else */\nif (process.env.NODE_ENV !== 'production') {\n    init();\n}\nfunction defaultValueIsObservable(value) {\n    // intentionally checking for null\n    if (value === null) {\n        return false;\n    }\n    // treat all non-object types, including undefined, as non-observable values\n    if (typeof value !== 'object') {\n        return false;\n    }\n    if (isArray(value)) {\n        return true;\n    }\n    const proto = getPrototypeOf(value);\n    return proto === ObjectDotPrototype || proto === null || getPrototypeOf(proto) === null;\n}\nconst defaultValueObserved = (obj, key) => {\n    /* do nothing */\n};\nconst defaultValueMutated = (obj, key) => {\n    /* do nothing */\n};\nfunction createShadowTarget(value) {\n    return isArray(value) ? [] : {};\n}\nclass ObservableMembrane {\n    constructor(options = {}) {\n        this.readOnlyObjectGraph = new WeakMap();\n        this.reactiveObjectGraph = new WeakMap();\n        const { valueMutated, valueObserved, valueIsObservable, tagPropertyKey } = options;\n        this.valueMutated = isFunction(valueMutated) ? valueMutated : defaultValueMutated;\n        this.valueObserved = isFunction(valueObserved) ? valueObserved : defaultValueObserved;\n        this.valueIsObservable = isFunction(valueIsObservable)\n            ? valueIsObservable\n            : defaultValueIsObservable;\n        this.tagPropertyKey = tagPropertyKey;\n    }\n    getProxy(value) {\n        const unwrappedValue = unwrap(value);\n        if (this.valueIsObservable(unwrappedValue)) {\n            // When trying to extract the writable version of a readonly we return the readonly.\n            if (this.readOnlyObjectGraph.get(unwrappedValue) === value) {\n                return value;\n            }\n            return this.getReactiveHandler(unwrappedValue);\n        }\n        return unwrappedValue;\n    }\n    getReadOnlyProxy(value) {\n        value = unwrap(value);\n        if (this.valueIsObservable(value)) {\n            return this.getReadOnlyHandler(value);\n        }\n        return value;\n    }\n    unwrapProxy(p) {\n        return unwrap(p);\n    }\n    getReactiveHandler(value) {\n        let proxy = this.reactiveObjectGraph.get(value);\n        if (isUndefined(proxy)) {\n            // caching the proxy after the first time it is accessed\n            const handler = new ReactiveProxyHandler(this, value);\n            proxy = new Proxy(createShadowTarget(value), handler);\n            registerProxy(proxy, value);\n            this.reactiveObjectGraph.set(value, proxy);\n        }\n        return proxy;\n    }\n    getReadOnlyHandler(value) {\n        let proxy = this.readOnlyObjectGraph.get(value);\n        if (isUndefined(proxy)) {\n            // caching the proxy after the first time it is accessed\n            const handler = new ReadOnlyHandler(this, value);\n            proxy = new Proxy(createShadowTarget(value), handler);\n            registerProxy(proxy, value);\n            this.readOnlyObjectGraph.set(value, proxy);\n        }\n        return proxy;\n    }\n}\n\nexport { ObservableMembrane };\n/** version: 2.0.0 */\n","const prefix = \"data-x\";\n\nexport default {\n  prefix,\n  root: `${prefix}-root`,\n  selector: `${prefix}-component`,\n  target: `${prefix}-target`,\n};\n","function unquoteKey(string: string) {\n  const count = string.length - 1;\n  const pair = string.charAt(0) + string.charAt(count);\n  return pair === '\"\"' || pair === \"''\" ? string.slice(1, count) : string;\n}\n\nconst cleanDatasetKey = (key: string, selector: string) => {\n  const cleaned = key.replace(selector, \"\");\n  return `${cleaned.charAt(0).toLocaleLowerCase()}${cleaned.slice(1)}`;\n};\n\nconst filterDataset = (dataset: DOMStringMap, selector: string) => {\n  const options = { ...dataset };\n  return Object.keys(options).filter((entry) => entry.includes(selector));\n};\n\nexport const convertType = (value: any, unquote?: boolean) => {\n  if (value.includes(\"{\") && value.includes(\"}\")) {\n    return JSON.parse(value.replace(/'/g, '\"'));\n  } else if (value.includes(\"[\") && value.includes(\"]\")) {\n    const cleanedArr = value.replace(\"[\", \"\").replace(\"]\", \"\");\n    return cleanedArr.split(\",\").map((el: any) => {\n      return convertType(el.trim(), true);\n    });\n  } else {\n    switch (value) {\n      case \"false\":\n        return false;\n      case \"true\":\n        return true;\n      case \"null\":\n        return null;\n      default:\n        return typeof parseFloat(value) === \"number\"\n          ? parseFloat(value)\n          : value;\n    }\n  }\n};\n\nexport const parseDataset = (dataset: DOMStringMap, selector: string) => {\n  const res: { [x: string]: any } = {};\n  const filteredKeys = filterDataset(dataset, selector);\n  console.log(\"filteredKeys\", filteredKeys);\n  filteredKeys.forEach((entry) => {\n    let cleanEntry = cleanDatasetKey(entry, selector);\n    res[cleanEntry] = convertType(dataset[entry]);\n  });\n\n  return res;\n};\n","import shortid from \"shortid\";\nimport { ObservableMembrane } from \"observable-membrane\";\nimport { ProxyPropertyKey } from \"observable-membrane/dist/shared\";\n// import { parseDataset } from \"../utils\";\nimport Configs from \"../configs\";\nimport { convertType } from \"../utils\";\n\nexport type RC<\n  Props extends object,\n  Tag extends HTMLElement\n> = ReactiveComponent<Props, Tag>;\n\nconst snakeToCamel = (str: string) =>\n  str.replace(/([-_][a-z0-9])/g, (group) =>\n    group.toUpperCase().replace(\"-\", \"\").replace(\"_\", \"\")\n  );\n\nexport class ReactiveComponent<Props, Tag extends HTMLElement> {\n  private id: string;\n  private $htmlEl: Tag;\n  private propsMap: { [key: string]: string };\n\n  constructor(htmlEl: Tag, handler: any) {\n    this.id = shortid.generate();\n    this.$htmlEl = htmlEl;\n    this.propsMap = {};\n\n    htmlEl.setAttribute(\"data-x-id\", this.id);\n    handler(this);\n  }\n\n  useChild = (name: string) =>\n    this.$htmlEl.querySelector(`[${Configs.target}=\"${name}\"]`) as HTMLElement;\n\n  useChildren = (name: string) =>\n    Array.from(\n      this.$htmlEl.querySelectorAll(\n        `[${Configs.target}=\"${name}\"]`\n      ) as NodeListOf<HTMLElement>\n    );\n\n  useState = <T extends object>(proxy: T, onChange: () => void): T => {\n    const membrane = new ObservableMembrane({\n      valueObserved(target: any, key: ProxyPropertyKey) {\n        // where target is the object that was accessed\n        // and key is the key that was read\n        // console.log(\"accessed \", key, target);\n      },\n      valueMutated(target: any, key: ProxyPropertyKey) {\n        // where target is the object that was mutated\n        // and key is the key that was mutated\n        // console.log(\"mutated \", key, target);\n        onChange();\n      },\n    });\n\n    return membrane.getProxy(proxy);\n  };\n\n  useProps = (): Props => {\n    // temp props object\n    const obj = {} as Props;\n\n    // cycle dataset and only handle interesting attributes\n    for (const [key, value] of Object.entries(this.$htmlEl.dataset)) {\n      if (\n        key.startsWith(\"x\") &&\n        !key.startsWith(\"xComponent\") &&\n        !key.startsWith(\"xId\")\n      ) {\n        // adjust prop name: data-x-prop-name -> propName\n        const [firstLetter, ...restOfWord] = key.substring(1);\n        const cleanKey = snakeToCamel(firstLetter.toLowerCase() + restOfWord);\n\n        // save original attibute name\n        this.propsMap[cleanKey] = key;\n\n        // store the converted value in temp props object\n        obj[cleanKey] = convertType(value);\n      }\n    }\n\n    // make props object reactive so it can auto update the DOM\n    const props$ = this.useState(obj, () => {\n      for (const [key, value] of Object.entries(props$)) {\n        const datasetKey = this.propsMap[key];\n        this.$htmlEl.dataset[datasetKey] = JSON.stringify(value);\n      }\n    });\n\n    // return all prop data attributes as reactive values\n    return props$;\n  };\n}\n","import { ReactiveComponent } from \"./ReactiveComponent\";\nimport Configs from \"../configs\";\n\nexport class ReactiveHtml {\n  private components: any;\n  private events: any;\n  private importer: () => Promise<any> | null;\n  private rootElement: any;\n  private selector: any;\n\n  constructor({\n    components,\n    events,\n    importer = null,\n    rootElement = `[${Configs.root}]`,\n    selector = `[${Configs.selector}]`,\n  }) {\n    this.rootElement = document.body.querySelector(rootElement);\n    this.selector = selector;\n    this.components = components;\n    this.importer = importer;\n    this.events = events;\n\n    this.init();\n  }\n\n  findComponents(target: HTMLElement) {\n    const components = target.querySelectorAll(this.selector);\n    return Array.from(components);\n  }\n\n  importComponents(target: HTMLElement) {\n    return new Promise<any>((resolve, reject) => {\n      try {\n        const components = this.findComponents(target);\n        components.forEach((component) => {\n          const componentName = component.dataset.xComponent;\n          new ReactiveComponent(component, this.components[componentName]);\n        });\n        resolve(components);\n      } catch (e) {\n        reject(e);\n      }\n    });\n  }\n\n  async init() {\n    try {\n      const res = await this.importComponents(this.rootElement);\n      console.log(res);\n    } catch (e) {\n      console.error(e);\n    }\n  }\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n\n    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });\n    }\n  });\n}\n\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TypedEmitter = require(\"events\").EventEmitter;\n","import { ListenerSignature, TypedEmitter } from \"tiny-typed-emitter\";\n\nexport const createEvents = <T>() => new TypedEmitter<ListenerSignature<T>>();\n","import { RC } from \"../../lib/helpers/ReactiveComponent\";\n\ninterface CounterProps {\n  delta: number;\n}\n\nconst CounterComponent = (ctx: RC<CounterProps, HTMLDivElement>) => {\n  const { delta } = ctx.useProps();\n  const incrementEl = ctx.useChild(\"increment\") as HTMLButtonElement;\n  const valueEl = ctx.useChild(\"value\") as HTMLDivElement;\n\n  const countState = ctx.useState({ value: 0 }, () => {\n    valueEl.innerHTML = `${countState.value}`;\n\n  });\n\n  incrementEl.addEventListener(\"click\", () => {\n    countState.value += delta;\n  });\n};\n\nexport default CounterComponent;\n","// import { ReactiveHtml } from \"../lib/helpers/dispatcher\";\nimport { ReactiveHtml } from \"../lib/helpers/componentsManager\";\nimport { createEvents } from \"../lib/helpers/eventEmitter\";\n\nimport CounterComponent from \"./components/CounterComponent\";\n\ninterface GlobalEvents {\n  addItemToCart: () => void;\n}\n\nnew ReactiveHtml({\n  components: { CounterComponent },\n  events: createEvents<GlobalEvents>(),\n});\n"]}